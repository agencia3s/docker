version: "3.8"
services:

  #PHP Service
  app:
    build:
      context: ./.docker/
      dockerfile: application.dockerfile
    working_dir: /var/www
    depends_on:
        - db-server-local
        - server-cache
   ## command:
   # composer install && php artisan migrate:refresh --seed
    volumes:
      - ./:/var/www
    networks:
      - docker-servidor_default

  #Nginx Service
  webserver:
    build:
        context: ./.docker/
        dockerfile: server.dockerfile
    working_dir: /var/www
    volumes:
        - ./:/var/www
    ports:
        - 80:80
    networks:
      - docker-servidor_default
  db-server-local:
    image: postgres:latest
    container_name: db-server-local
    restart: always
    volumes:
      - ./.docker/database/postgresql:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE}
    # ports:
    #   - "5432:5432"
    networks:
      - docker-servidor_default
  server-cache:
    image: redis:latest
    restart: always
    # ports:
    #   - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./.docker/database/cache:/data
    networks:
      - docker-servidor_default

#   db-server-local:
#     image: mysql:latest
#     command: --default-authentication-plugin=mysql_native_password
#     container_name: db-server-local
#     restart: always
#     volumes:
#       - ./.docker/database/mysql:/var/lib/mysql
#     environment:
##       MYSQL_ALLOW_EMPTY_PASSWORD: 1
#       MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
#     ports:
#       - "3306:3306"
#     networks:
#       - docker-servidor_default

#Docker Networks
networks:
  docker-servidor_default:
    driver: bridge
